package com.wadpam.guja.dao;

import com.google.common.base.Function;
import com.google.common.collect.Collections2;
import com.google.common.collect.Iterables;
import com.google.common.collect.Lists;
import com.google.inject.Inject;

import com.wadpam.guja.domain.DContact;
import com.wadpam.guja.oauth2.dao.DConnectionMapper;
import net.sf.mardao.core.CursorPage;
import net.sf.mardao.core.filter.Filter;
import net.sf.mardao.dao.Supplier;
import javax.cache.annotation.CacheDefaults;
import java.util.Collection;
import java.util.List;

/**
 * Implementation of Business Methods related to entity DContact.
 * This (empty) class is generated by mardao, but edited by developers.
 * It is not overwritten by the generator once it exists.
 *
 * Generated on 2015-02-08T23:20:34.320+0100.
 * @author mardao DAO generator (net.sf.mardao.plugin.ProcessDomainMojo)
 */
@CacheDefaults(cacheName = "DContact")
public class DContactDaoBean 
	extends GeneratedDContactDaoImpl
{

  @Inject
  public DContactDaoBean(Supplier supplier) {
    super(supplier);
  }

  public CursorPage<DContact> queryPageByTags(Object parent, Collection<String> tags,
                                              int requestedPageSize, String cursorString) {

    Collection<Filter> filters = Collections2.transform(tags, new Function<String, Filter>() {
      @Override
      public Filter apply(String tag) {
        return Filter.inFilter(DContactMapper.Field.TAGS.getFieldName(), tag);
      }
    });

    // queryPage(boolean keysOnly, int requestedPageSize, Object ancestorKey, String primaryOrderBy, boolean primaryIsAscending, String secondaryOrderBy, boolean secondaryIsAscending, Collection<String> projections, String cursorString, Filter... filters)
    return queryPage(false, requestedPageSize, parent,
        DContactMapper.Field.LASTNAME.getFieldName(), true,
        null, true,
        null, cursorString,
        Iterables.toArray(filters, Filter.class));
  }


}
